{"version":3,"sources":["temple.png","reportWebVitals.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Withdraw","withdrawMoney","handleWithdraw","withdraw","react_default","a","createElement","id","className","onClick","type","onChange","Number","document","getElementById","value","Deposit","_ref2","handleDeposit","depositMoney","deposit","ATM","_useState","useState","_useState2","Object","slicedToArray","accountBalance","setAccountBalance","_useState3","_useState4","setWithdraw","_useState5","_useState6","setDeposit","_useState7","_useState8","accountHistory","setAccountHistory","_useState9","_useState10","isWithdraw","setIsWithdraw","_useState11","_useState12","isDeposit","setIsDeposit","_useState13","_useState14","isSelected","setIsSelected","_useState15","_useState16","selectedResponse","setSelectedResponse","_useState17","_useState18","historyShow","setHistoryShow","_useState19","_useState20","isVerified","setIsVerified","_useState21","_useState22","pinCode","setPinCode","_useState23","_useState24","pinDisplay","setPinDisplay","pin","join","handleSelection","event","target","style","backgroundColor","fontFamily","console","log","selectNumber","len","length","asteriskArr","Array","fill","push","toConsumableArray","concat","handleHistory","map","item","color","account","src","temple","key","slice","innerHTML","width","text","amount","alert","newAmount","toLocaleString","newwithdraw","newDeposit","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f599b402.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/temple.7ccd322d.png\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './App.css';\nimport React, {useState, useEffect} from 'react'\nimport temple from './temple.png'\n\nfunction Withdraw({withdrawMoney, handleWithdraw, withdraw}) {\n    return (\n        <div id=\"withdraw-div\">\n            \n                <h3>Withdraw Amount: <span className='balance-amount'>${withdraw}</span></h3>\n            <div>\n            <div  id = 'addStuff'> \n            <div>\n                <button className = \"quick-btn\" onClick={()=>withdrawMoney(20)}>$20</button>\n                <button className = \"quick-btn\" onClick={()=>withdrawMoney(80)}>$80</button>\n            </div>\n            <div>\n            <button className = \"quick-btn\" onClick={()=>withdrawMoney(40)}>$40</button>\n            <button className = \"quick-btn\" onClick={()=>withdrawMoney(100)}>$100</button>\n            </div>\n            <div>\n                <button className = \"quick-btn\" onClick={()=>withdrawMoney(60)}>$60</button>\n                <button className = \"quick-btn\" onClick={()=>withdrawMoney(200)}>$200</button>\n            </div> \n            <div>Quick Cash</div>      \n            <div id = \"other-withdraw\">\n                <input type = 'number' id = 'withdraw' onChange = {handleWithdraw}></input>\n                <button id = 'other-button'onClick = {()=>withdrawMoney(Number(document.getElementById('withdraw').value))}>Other Amount</button>\n            </div>\n        </div>\n        </div>\n    </div>\n    )\n};\n\nfunction Deposit({handleDeposit, depositMoney, deposit}) {\n    return(\n        <div id=\"deposit-div\">\n            <h3>Deposit Amount: <span className='balance-amount'>${deposit}</span></h3>\n            <input type = 'number' id = 'deposit' onChange = {handleDeposit}></input>\n            <button type = 'button' id = 'deposit-button' onClick = {depositMoney}>Deposit</button>\n        </div>\n    )\n}\n\nfunction ATM() {\n\n    const [accountBalance, setAccountBalance] = useState({});\n    const [withdraw, setWithdraw] = useState(0);\n    const [deposit, setDeposit] = useState(0);\n    const [accountHistory, setAccountHistory] = useState([]);\n    const [isWithdraw, setIsWithdraw] = useState(false);\n    const [isDeposit, setIsDeposit] = useState(false);\n    const [isSelected, setIsSelected] = useState(true);\n    const [selectedResponse, setSelectedResponse] = useState(false)\n    const [historyShow, setHistoryShow] = useState(false);\n    const [isVerified, setIsVerified] = useState(false);\n    const [pinCode , setPinCode] = useState([]);\n    const [pinDisplay, setPinDisplay] = useState('')\n\n    let pin = pinCode.join('')\n\n    const withdrawMoney = (amount)=>{\n        if((accountBalance[pin] - amount) < 0){\n            return alert(`You don't have the funds!`)\n        }else{\n        let newAmount = accountBalance[pin] - amount;\n        setWithdraw(amount);\n        setAccountBalance(accountBalance, accountBalance[pin] = newAmount);\n        setAccountHistory([...accountHistory, {withdraw:amount.toLocaleString('en-us'),account:newAmount.toLocaleString('en-us')}]);\n        document.getElementById('withdraw').value = 0;\n        }\n    }\n\n    const handleWithdraw = ()=>{\n        let newwithdraw = document.getElementById('withdraw').value;\n        setWithdraw(newwithdraw);\n    }\n\n    const handleDeposit = ()=>{\n        let newDeposit = document.getElementById('deposit').value;\n        setDeposit(newDeposit);\n    }\n\n    const depositMoney = ()=>{\n        let deposit = Number(document.getElementById('deposit').value);\n        let newAmount = accountBalance[pin] + deposit;\n        setAccountBalance(accountBalance, accountBalance[pin] = newAmount);\n        setAccountHistory([...accountHistory, {deposit:deposit.toLocaleString('en-us'),account:newAmount.toLocaleString('en-us')}]);\n        setDeposit(0);\n        document.getElementById('deposit').value = 0;\n    }\n    const handleSelection = (event)=>{\n        if (event.target.style.backgroundColor === 'red'){\n            event.target.style.backgroundColor = 'white'; \n            event.target.style.fontFamily = 'siliconhollow'\n            setSelectedResponse(false);    \n            setIsWithdraw(false);\n            setIsDeposit(false);\n        }else{\n            event.target.style.backgroundColor = 'red';\n            if(event.target === document.getElementById('withdrawBtn') && document.getElementById('withdrawBtn').style.backgroundColor === 'red'){\n                document.getElementById('depositBtn').style.backgroundColor = 'white';\n                document.getElementById('depositBtn').style.fontFamily = 'siliconhollow';\n                console.log(event.target.style.fontFamily)\n                event.target.style.fontFamily = 'siliconfilled';\n                setSelectedResponse(true); \n                setIsSelected(false);\n                setIsWithdraw(true);\n                setIsDeposit(false);\n            }else{ \n                document.getElementById('depositBtn').style.backgroundColor = 'red'\n                document.getElementById('withdrawBtn').style.backgroundColor = 'white'\n                document.getElementById('withdrawBtn').style.fontFamily = 'siliconhollow';\n                event.target.style.fontFamily = 'siliconfilled'\n                setSelectedResponse(true); \n                setIsSelected(false);\n                setIsWithdraw(false);\n                setIsDeposit(true);\n            }    \n        }\n\n    }\n    const selectNumber = (e)=>{\n        let len = pinDisplay.length;\n        let asteriskArr = Array(len).fill('*');\n        asteriskArr.push(e.target.value)\n        setPinDisplay([...asteriskArr])\n        setPinCode([...pinCode, e.target.value])\n    }\n    const clearPin = ()=>{\n        setPinDisplay('');\n        setPinCode([]);\n    }\n    const undoPin = ()=>{\n        console.log(pinDisplay)\n        setPinDisplay(pinDisplay.slice(0,pinDisplay.length-1));\n        setPinCode([...pinCode.slice(0,pinCode.length-1)]);\n        console.log([pinCode.slice(0,pinCode.length-1)])\n    }\n    const enterPin = ()=>{\n        if(pinCode.length < 4) { \n            document.getElementById('pin-title').innerHTML = 'Pin must be 4 or More'\n            document.getElementById('pin-title').style.color = 'red'\n        }else{\n        setIsVerified(true);\n        (accountBalance[pin]) ? (console.log(accountBalance[pin])) : setAccountBalance(accountBalance, accountBalance[pin]= 0);\n        console.log(accountBalance);\n        setPinDisplay('')\n        }\n    }\n\n    const endSession = ()=>{\n        setPinCode([]);\n        setIsVerified(false)\n    }\n\n    const showHistory = ()=>{\n        let width = document.getElementById('interactive').style.width\n        !historyShow ? width = '65%' : width = '100%';\n        document.getElementById('interactive').style.width = width;\n        let text = document.getElementById('history-button').innerHTML;\n        !historyShow ? text = 'Hide Account History' : text = 'Show Account History';\n        document.getElementById('history-button').innerHTML = text;\n        !historyShow ? setHistoryShow(true) : setHistoryShow(false);\n    }\n\n    const handleHistory = accountHistory.map((item)=>{\n        return (\n            <div className = \"history-item\">\n                {item.withdraw ? <li style={{color:'red'}}>Withdrew <strong>${item.withdraw}</strong> | New Balance:<strong>${item.account}</strong></li> : <li style={{color:'green'}}>Deposited <strong>${item.deposit}</strong> | New Balance:<strong>${item.account}</strong></li>}\n            </div>\n        )\n    });\n\n    return (\n        <div id= \"brick-wall\">\n            <div id=\"atm-screen-div\">\n            <img src={temple} id = \"temple\"/>\n            <div id=\"atm-title\">REACT BANK ATM</div>\n            {!isVerified && \n            <div id = \"verification\">\n                <div id=\"inner-verification\">\n                    <div id=\"verification-title\">\n                        <h2 id=\"pin-title\">Enter Pin</h2>\n                    </div>\n                    <div id =\"pin-display\">\n                        <h3>{pinDisplay}</h3>\n                    </div>\n                    <div id = \"keypad\">\n                        <div className = \"grid-row\">\n                            <button key = '1' className = \"keypad-btn\" onClick = {selectNumber} value = '1' >1</button>\n                            <button key = '2' className = \"keypad-btn\" onClick = {selectNumber} value = '2'>2</button>\n                            <button key = '3' className = \"keypad-btn\" onClick = {selectNumber} value = '3'>3</button>\n                        </div>\n                        <div className = \"grid-row\">\n                            <button key = '4' className = \"keypad-btn\" onClick = {selectNumber} value = '4'>4</button>\n                            <button key = '5' className = \"keypad-btn\" onClick = {selectNumber} value = '5'>5</button>\n                            <button key = '6' className = \"keypad-btn\" onClick = {selectNumber} value = '6'>6</button>\n                        </div>\n                        <div className = \"grid-row\">\n                            <button key = '7' className = \"keypad-btn\" onClick = {selectNumber} value = '7'>7</button>\n                            <button key = '8' className = \"keypad-btn\" onClick = {selectNumber} value = '8'>8</button>\n                            <button key = '9' className = \"keypad-btn\" onClick = {selectNumber} value = '9'>9</button>\n                        </div>\n                        <div className = \"grid-row\">\n                            <button key = 'clear' className = \"keypad-btn\" onClick = {clearPin}>Clear</button>\n                            <button key = '0' className = \"keypad-btn\" onClick = {selectNumber} value = '0'>0</button>\n                            <button key = '<' className = \"keypad-btn\" onClick = {undoPin}>&lt;</button>\n                        </div>\n                        <div id = \"submit-pin\">\n                            <button id = \"submit-btn\" onClick = {enterPin}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>}\n            { isVerified &&\n            <div id = \"atm-screen\">\n                <div id = \"interactive\">\n                    <h1 id = \"account-balance\">Account Balance<br/><span className='balance-amount'>${accountBalance[pin]}</span></h1>\n                    {\n                    isSelected &&\n                    <div id = \"button-div\">\n                        <div>\n                            <button onClick={handleSelection} id = 'withdrawBtn'>Withdraw</button>\n                        </div>\n                        <div>\n                            <button onClick={handleSelection} id = 'depositBtn'>Deposit</button>\n                        </div>\n                        <div>\n                            <button type='button' id=\"history-button\" onClick={showHistory}>Show Account History</button>\n                        </div>\n                        <div>\n                            <button id = \"end-session\" onClick = {endSession}>End Session</button>\n                        </div>\n                    </div>\n                    }\n                    {\n                    selectedResponse &&\n                    <div id = \"input-screen\">\n                        {isWithdraw && <div><Withdraw withdrawMoney = {withdrawMoney} handleWithdraw = {handleWithdraw} withdraw = {withdraw}/><button type='button' onClick={()=> {setIsSelected(true);setSelectedResponse(false)}}>Main Menu</button></div>}\n                        {isDeposit && <div><Deposit depositMoney = {depositMoney} handleDeposit = {handleDeposit}  deposit = {deposit} /><button type='button' onClick={()=> {setIsSelected(true);setSelectedResponse(false)}}>Main Menu</button></div>}\n                    </div>\n                    }\n                </div>\n                {\n                    historyShow &&\n                <div id = 'history'>\n                    <ul id=\"history-list\">\n                        <h3 id = \"history-title\">Account History</h3>\n                        {handleHistory}\n                    </ul>\n                </div>\n                }\n            </div>\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default ATM\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ATM from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ATM />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}