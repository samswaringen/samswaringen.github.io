{"version":3,"sources":["reportWebVitals.js","ShoppingCart.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","products","dataFetchReducer","state","action","type","isLoading","isError","data","payload","Error","Products","props","useState","items","setItems","cart","setCart","query","setQuery","initialUrl","initialData","url","setUrl","useReducer","dispatch","console","log","useEffect","didCancel","a","axios","result","map","item","push","fetchData","useDataApi","doFetch","JSON","stringify","addToCart","e","name","target","filter","instock","list","index","Math","floor","random","Image","src","width","roundedCircle","Button","variant","size","cost","onClick","cartList","Card","Header","Accordion","Toggle","as","eventKey","Collapse","newCart","i","deleteCartItem","Body","country","finalList","total","getTotalCart","final","newTotal","reduce","accum","current","restockProducts","stock","Container","Row","Col","style","listStyleType","onSubmit","event","preventDefault","value","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06a431c3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect, useReducer }  from 'react';\nimport Card from 'react-bootstrap/Card'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Image from 'react-bootstrap/Image'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios'\n\n// simulate getting products from DataBase\nconst products = [];\n//=========Cart=============\nconst useDataApi = (initialUrl, initialData) => {\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  });\n  console.log(`useDataApi called`);\n\n  useEffect(() => {\n    console.log(\"useEffect Called\");\n    let didCancel = false;\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_INIT\" });\n      try {\n        const result = await axios(url);\n        console.log(\"FETCH FROM URl\");\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\n          result.data.map(item=>products.push(item))\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_FAILURE\" });\n        }\n      }\n    };\n    fetchData();\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n  return [state, setUrl];\n};\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_INIT\":\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case \"FETCH_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst Products = (props) => {\n  const [items, setItems] = useState(products);\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n  //  Fetch Data\n  const [query, setQuery] = useState(\"http://localhost:1337/products\");\n\n  const [{ data, isLoading, isError }, doFetch] = useDataApi(\n    \"http://localhost:1337/products\",\n    {\n      data: [],\n    }\n  );\n\n  useEffect(()=>{\n    setItems([...products])\n  },[data])\n\n  console.log(`Rendering Products ${JSON.stringify(data)}`);\n\n  // Fetch Data\n  const addToCart = (e) => {\n    let name = e.target.name;\n    let item = items.filter((item) => item.name == name);\n    let instock = item[0].instock;\n    if(instock > 0){\n      instock --;\n      setCart([...cart, ...item]);\n    }else {\n      instock = instock;\n    }   \n    item[0].instock = instock;\n    console.log(`add to Cart ${JSON.stringify(item)}`);\n  \n    \n    doFetch(query);\n  };\n  const deleteCartItem = (index) => {\n    cart[index].instock++\n    let newCart = cart.filter((item, i) => index != i);   \n    setCart(newCart);\n  };\n \n  console.log(data)\n  let list = items.map((item, index) => {\n    let random = Math.floor(Math.random()*100)\n    let n = index + random;\n    let url = \"https://picsum.photos/id/\" + n + \"/50/50\";\n    console.log(url)\n    return (\n      <li key={index}>\n        <Image src={url} width={70} roundedCircle></Image>\n        <Button variant=\"primary\" size=\"large\">\n          {item.name}<br/>{`Cost:$${item.cost}`}<br/>{`Instock:${item.instock}`}\n        </Button>\n        <input name={item.name} type=\"submit\" onClick={addToCart}></input>\n      </li>\n    );\n  });\n\n  let cartList = cart.map((item, index) => {\n    return (\n      <Card key={index}>\n        <Card.Header>\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey={1 + index}>\n            {item.name}\n          </Accordion.Toggle>\n        </Card.Header>\n        <Accordion.Collapse\n          onClick={() => deleteCartItem(index)}\n          eventKey={1 + index}\n        >\n          <Card.Body>\n            $ {item.cost} from {item.country}\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    );\n  });\n\n  let finalList = () => {\n    let total = getTotalCart();\n    let final = cart.map((item, index) => {\n      return (\n        <div key={index} index={index}>\n          {item.name}\n        </div>\n      );\n    });\n    return { final, total };\n  };\n\n  const getTotalCart = ()=>{\n    let costs = cart.map((item) => item.cost);\n    const reducer = (accum, current) => accum + current;\n    let newTotal = costs.reduce(reducer, 0);\n    console.log(`total updated to ${newTotal}`);\n    return newTotal;\n  }\n  const checkOut = () => {\n    setCart([])\n  };\n\n  // TODO: implement the restockProducts function\n  const restockProducts = async (url) => {\n    let restock = await axios(url)\n    restock = restock.data;\n    restock.map(item=>{\n      let name = item.name;\n      let stock = item.instock;\n      let current = items.filter((item) => item.name == name);\n      current[0].instock += stock;\n      setItems([...items])\n    })\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Product List</h1>\n          <ul style={{ listStyleType: \"none\" }}>{list}</ul>\n        </Col>\n        <Col>\n          <h1>Cart Contents</h1>\n          <Accordion>{cartList}</Accordion>\n        </Col>\n        <Col>\n          <h1>CheckOut </h1>\n          <Button onClick={checkOut}>CheckOut $ {finalList().total}</Button>\n          <div> {finalList().total > 0 && finalList().final} </div>\n        </Col>\n      </Row>\n      <Row>\n        <form\n          onSubmit={(event) => {\n            restockProducts(`${query}`);\n            console.log(`Restock called on ${query}`);\n            event.preventDefault();\n          }}\n        >\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(event) => setQuery(event.target.value)}\n          />\n          <button type=\"submit\">ReStock Products</button>\n        </form>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Products;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Products from './ShoppingCart';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Products />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}